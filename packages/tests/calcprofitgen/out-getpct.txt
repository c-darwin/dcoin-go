PASS
BenchmarkCalcProfit-4	Duration 1.4130659s
       1	1413065900 ns/op
ok  	github.com/democratic-coin/dcoin-go/packages/tests/calcprofitgen	3.906s
PASS
BenchmarkCalcProfit-4	Duration 1.4921827s
       1	1492182700 ns/op
ok  	github.com/democratic-coin/dcoin-go/packages/tests/calcprofitgen	5.073s
1.56s of 1.56s total (  100%)
      flat  flat%   sum%        cum   cum%
     0.47s 30.13% 30.13%      0.55s 35.26%  runtime.cgocall
     0.10s  6.41% 36.54%      0.10s  6.41%  runtime.mapaccess1_fast64
     0.09s  5.77% 42.31%      0.10s  6.41%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit.func1
     0.07s  4.49% 46.79%      0.07s  4.49%  runtime.osyield
     0.05s  3.21% 50.00%      0.06s  3.85%  runtime.scanobject
     0.04s  2.56% 52.56%      0.04s  2.56%  runtime.freedefer
     0.04s  2.56% 55.13%      0.05s  3.21%  runtime.mallocgc
     0.04s  2.56% 57.69%      0.04s  2.56%  runtime.newdefer
     0.03s  1.92% 59.62%      0.05s  3.21%  runtime.makemap
     0.03s  1.92% 61.54%      0.03s  1.92%  runtime.memmove
     0.02s  1.28% 62.82%      0.52s 33.33%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteRows).Next
     0.02s  1.28% 64.10%      0.02s  1.28%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteStmt).Query
     0.02s  1.28% 65.38%      0.02s  1.28%  runtime.deferproc
     0.02s  1.28% 66.67%      0.03s  1.92%  runtime.deferreturn
     0.02s  1.28% 67.95%      0.03s  1.92%  runtime.entersyscall
     0.02s  1.28% 69.23%      0.06s  3.85%  runtime.mapassign1
     0.02s  1.28% 70.51%      0.02s  1.28%  runtime.mapiternext
     0.02s  1.28% 71.79%      0.04s  2.56%  runtime.newarray
     0.02s  1.28% 73.08%      0.20s 12.82%  runtime.systemstack
     0.02s  1.28% 74.36%      0.07s  4.49%  runtime.typedmemmove
     0.02s  1.28% 75.64%      0.02s  1.28%  runtime.usleep
     0.01s  0.64% 76.28%      0.06s  3.85%  database/sql.convertAssign
     0.01s  0.64% 76.92%      0.26s 16.67%  github.com/democratic-coin/dcoin-go/packages/utils.(*DCDB).GetAll
     0.01s  0.64% 77.56%      0.35s 22.44%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit
     0.01s  0.64% 78.21%      0.10s  6.41%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit.func2
     0.01s  0.64% 78.85%      0.01s  0.64%  reflect.(*rtype).AssignableTo
     0.01s  0.64% 79.49%      0.01s  0.64%  reflect.Indirect
     0.01s  0.64% 80.13%      0.02s  1.28%  reflect.Value.Set
     0.01s  0.64% 80.77%      0.01s  0.64%  reflect.ValueOf
     0.01s  0.64% 81.41%      0.01s  0.64%  reflect.flag.mustBeAssignable
     0.01s  0.64% 82.05%      0.01s  0.64%  regexp.(*bitState).push
     0.01s  0.64% 82.69%      0.03s  1.92%  regexp.(*machine).tryBacktrack
     0.01s  0.64% 83.33%      0.01s  0.64%  regexp/syntax.(*Inst).MatchRunePos
     0.01s  0.64% 83.97%      0.01s  0.64%  regexp/syntax.(*Regexp).Simplify
     0.01s  0.64% 84.62%      0.03s  1.92%  runtime.(*mcentral).cacheSpan
     0.01s  0.64% 85.26%      0.01s  0.64%  runtime.(*mcentral).grow
     0.01s  0.64% 85.90%      0.01s  0.64%  runtime.addspecial
     0.01s  0.64% 86.54%      0.01s  0.64%  runtime.callers
     0.01s  0.64% 87.18%      0.02s  1.28%  runtime.cgoCheckArg
     0.01s  0.64% 87.82%      0.01s  0.64%  runtime.cgoIsGoPointer
     0.01s  0.64% 88.46%      0.06s  3.85%  runtime.convT2E
     0.01s  0.64% 89.10%      0.05s  3.21%  runtime.deferproc.func1
     0.01s  0.64% 89.74%      0.01s  0.64%  runtime.duffcopy
     0.01s  0.64% 90.38%      0.01s  0.64%  runtime.duffzero
     0.01s  0.64% 91.03%      0.07s  4.49%  runtime.findrunnable
     0.01s  0.64% 91.67%      0.02s  1.28%  runtime.gentraceback
     0.01s  0.64% 92.31%      0.01s  0.64%  runtime.getcallersp
     0.01s  0.64% 92.95%      0.04s  2.56%  runtime.growslice
     0.01s  0.64% 93.59%      0.02s  1.28%  runtime.heapBitsBulkBarrier
     0.01s  0.64% 94.23%      0.01s  0.64%  runtime.heapBitsForObject
     0.01s  0.64% 94.87%      0.01s  0.64%  runtime.heapBitsSetType
     0.01s  0.64% 95.51%      0.01s  0.64%  runtime.mapaccess1_faststr
     0.01s  0.64% 96.15%      0.04s  2.56%  runtime.newobject
     0.01s  0.64% 96.79%      0.01s  0.64%  runtime.reentersyscall
     0.01s  0.64% 97.44%      0.01s  0.64%  runtime.scanblock
     0.01s  0.64% 98.08%      0.01s  0.64%  runtime.stdcall1
     0.01s  0.64% 98.72%      0.01s  0.64%  runtime.writebarrierptr_nostore
     0.01s  0.64% 99.36%      0.01s  0.64%  runtime/internal/atomic.Cas64
     0.01s  0.64%   100%      0.01s  0.64%  runtime/internal/atomic.Or8
         0     0%   100%      0.13s  8.33%  database/sql.(*DB).Query
         0     0%   100%      0.13s  8.33%  database/sql.(*DB).query
         0     0%   100%      0.13s  8.33%  database/sql.(*DB).queryConn
         0     0%   100%      0.01s  0.64%  database/sql.(*Rows).Close
         0     0%   100%      0.53s 33.97%  database/sql.(*Rows).Next
         0     0%   100%      0.06s  3.85%  database/sql.(*Rows).Scan
         0     0%   100%      0.35s 22.44%  github.com/democratic-coin/dcoin-go/packages/dcparser.(*Parser).CalcProfit_
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/packages/dcparser.(*Parser).ErrInfo
         0     0%   100%      0.35s 22.44%  github.com/democratic-coin/dcoin-go/packages/dcparser.(*Parser).calcProfit_
         0     0%   100%      1.21s 77.56%  github.com/democratic-coin/dcoin-go/packages/tests/calcprofitgen.BenchmarkCalcProfit
         0     0%   100%      0.59s 37.82%  github.com/democratic-coin/dcoin-go/packages/utils.(*DCDB).GetPct
         0     0%   100%      0.26s 16.67%  github.com/democratic-coin/dcoin-go/packages/utils.(*DCDB).OneRow
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit.func3
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/packages/utils.Caller
         0     0%   100%      0.05s  3.21%  github.com/democratic-coin/dcoin-go/packages/utils.FormatQueryArgs
         0     0%   100%      0.11s  7.05%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteConn).Prepare
         0     0%   100%      0.13s  8.33%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteConn).Query
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteRows).Close
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteStmt).Close
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_column_double
         0     0%   100%      0.06s  3.85%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_column_int64
         0     0%   100%      0.09s  5.77%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_column_type
         0     0%   100%      0.01s  0.64%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_finalize
         0     0%   100%      0.09s  5.77%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_prepare_v2
         0     0%   100%      0.29s 18.59%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_step
         0     0%   100%      0.03s  1.92%  regexp.(*Regexp).FindAllStringSubmatchIndex
         0     0%   100%      0.03s  1.92%  regexp.(*Regexp).allMatches
         0     0%   100%      0.03s  1.92%  regexp.(*Regexp).doExecute
         0     0%   100%      0.03s  1.92%  regexp.(*machine).backtrack
         0     0%   100%      0.02s  1.28%  regexp.Compile
         0     0%   100%      0.02s  1.28%  regexp.compile
         0     0%   100%      0.01s  0.64%  regexp/syntax.(*Inst).MatchRune
         0     0%   100%      0.01s  0.64%  regexp/syntax.(*compiler).compile
         0     0%   100%      0.01s  0.64%  regexp/syntax.(*compiler).rune
         0     0%   100%      0.01s  0.64%  regexp/syntax.Compile
         0     0%   100%      0.06s  3.85%  runtime.(*gcWork).get
         0     0%   100%      0.03s  1.92%  runtime.(*mcache).refill
         0     0%   100%      0.01s  0.64%  runtime.Caller
         0     0%   100%      0.01s  0.64%  runtime.SetFinalizer.func2
         0     0%   100%      0.02s  1.28%  runtime._System
         0     0%   100%      0.01s  0.64%  runtime.addfinalizer
         0     0%   100%      0.01s  0.64%  runtime.callers.func1
         0     0%   100%      0.02s  1.28%  runtime.cgoCheckPointer
         0     0%   100%      0.04s  2.56%  runtime.deferreturn.func1
         0     0%   100%      0.01s  0.64%  runtime.gcAssistAlloc.func1
         0     0%   100%      0.07s  4.49%  runtime.gcBgMarkWorker
         0     0%   100%      0.13s  8.33%  runtime.gcDrain
         0     0%   100%      0.01s  0.64%  runtime.gcDrainN
         0     0%   100%      0.01s  0.64%  runtime.gcFlushBgCredit
         0     0%   100%      0.02s  1.28%  runtime.gcMark
         0     0%   100%      0.02s  1.28%  runtime.gcMarkTermination.func1
         0     0%   100%      0.05s  3.21%  runtime.gchelper
         0     0%   100%      0.01s  0.64%  runtime.gcstopm
         0     0%   100%      0.06s  3.85%  runtime.getfull
         0     0%   100%      1.28s 82.05%  runtime.goexit
         0     0%   100%      0.01s  0.64%  runtime.gopreempt_m
         0     0%   100%      0.01s  0.64%  runtime.goschedImpl
         0     0%   100%      0.02s  1.28%  runtime.lock
         0     0%   100%      0.03s  1.92%  runtime.mallocgc.func2
         0     0%   100%      0.03s  1.92%  runtime.mapiterinit
         0     0%   100%      0.01s  0.64%  runtime.markroot
         0     0%   100%      0.01s  0.64%  runtime.markroot.func1
         0     0%   100%      0.01s  0.64%  runtime.markrootBlock
         0     0%   100%      0.07s  4.49%  runtime.mcall
         0     0%   100%      0.01s  0.64%  runtime.morestack
         0     0%   100%      0.01s  0.64%  runtime.newstack
         0     0%   100%      0.01s  0.64%  runtime.notewakeup
         0     0%   100%      0.07s  4.49%  runtime.park_m
         0     0%   100%      0.01s  0.64%  runtime.pcdatavalue
         0     0%   100%      0.01s  0.64%  runtime.pcvalue
         0     0%   100%      0.02s  1.28%  runtime.runqgrab
         0     0%   100%      0.02s  1.28%  runtime.runqsteal
         0     0%   100%      0.01s  0.64%  runtime.scanframeworker
         0     0%   100%      0.01s  0.64%  runtime.scang
         0     0%   100%      0.01s  0.64%  runtime.scanstack
         0     0%   100%      0.01s  0.64%  runtime.scanstack.func1
         0     0%   100%      0.08s  5.13%  runtime.schedule
         0     0%   100%      0.01s  0.64%  runtime.semawakeup
         0     0%   100%      0.18s 11.54%  runtime.startTheWorldWithSema
         0     0%   100%      0.05s  3.21%  runtime.stopm
         0     0%   100%      1.21s 77.56%  testing.(*B).launch
         0     0%   100%      1.21s 77.56%  testing.(*B).runN
