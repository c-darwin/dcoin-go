PASS
BenchmarkCalcProfit-4	Duration 2.7080802s
       1	2708080200 ns/op
ok  	github.com/democratic-coin/dcoin-go/packages/tests/calcprofitgen	5.610s
PASS
BenchmarkCalcProfit-4	Duration 3.0513553s
       1	3051355300 ns/op
ok  	github.com/democratic-coin/dcoin-go/packages/tests/calcprofitgen	7.036s
2.98s of 3.19s total (93.42%)
Dropped 52 nodes (cum <= 0.02s)
      flat  flat%   sum%        cum   cum%
     0.99s 31.03% 31.03%      1.12s 35.11%  runtime.cgocall
     0.19s  5.96% 36.99%      0.22s  6.90%  runtime.mapaccess1_fast64
     0.15s  4.70% 41.69%      0.25s  7.84%  runtime.mallocgc
     0.10s  3.13% 44.83%      0.10s  3.13%  runtime.osyield
     0.09s  2.82% 47.65%      0.09s  2.82%  runtime.deferreturn
     0.08s  2.51% 50.16%      0.37s 11.60%  database/sql.convertAssign
     0.08s  2.51% 52.66%      0.08s  2.51%  runtime.mapiternext
     0.07s  2.19% 54.86%      0.07s  2.19%  runtime.heapBitsSetType
     0.06s  1.88% 56.74%      0.06s  1.88%  reflect.ValueOf
     0.06s  1.88% 58.62%      0.20s  6.27%  runtime.mapassign1
     0.06s  1.88% 60.50%      0.31s  9.72%  runtime.systemstack
     0.06s  1.88% 62.38%      0.06s  1.88%  runtime.usleep
     0.05s  1.57% 63.95%      0.11s  3.45%  runtime.makemap
     0.05s  1.57% 65.52%      0.05s  1.57%  runtime.newdefer
     0.04s  1.25% 66.77%      1.26s 39.50%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteRows).Next
     0.04s  1.25% 68.03%      0.07s  2.19%  reflect.Value.Set
     0.04s  1.25% 69.28%      0.04s  1.25%  reflect.Value.Type
     0.04s  1.25% 70.53%      0.08s  2.51%  runtime.mapiterinit
     0.04s  1.25% 71.79%      0.04s  1.25%  runtime.memmove
     0.03s  0.94% 72.73%      0.40s 12.54%  database/sql.(*Rows).Scan
     0.03s  0.94% 73.67%      1.94s 60.82%  github.com/democratic-coin/dcoin-go/packages/utils.(*DCDB).GetPct
     0.03s  0.94% 74.61%      0.09s  2.82%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit.func1
     0.03s  0.94% 75.55%      0.03s  0.94%  runtime.efacethash
     0.03s  0.94% 76.49%      0.03s  0.94%  runtime.prefetchnta
     0.03s  0.94% 77.43%      0.03s  0.94%  runtime.scanobject
     0.03s  0.94% 78.37%      0.07s  2.19%  runtime.typedmemmove
     0.02s  0.63% 79.00%      0.13s  4.08%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit.func2
     0.02s  0.63% 79.62%      0.30s  9.40%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_column_type
     0.02s  0.63% 80.25%      0.02s  0.63%  reflect.Value.Elem
     0.02s  0.63% 80.88%      0.02s  0.63%  reflect.Value.IsNil
     0.02s  0.63% 81.50%      0.02s  0.63%  regexp.(*machine).tryBacktrack
     0.02s  0.63% 82.13%      0.02s  0.63%  runtime.cgoCheckArg
     0.02s  0.63% 82.76%      0.04s  1.25%  runtime.cgoCheckPointer
     0.02s  0.63% 83.39%      0.11s  3.45%  runtime.convT2E
     0.02s  0.63% 84.01%      0.08s  2.51%  runtime.deferproc.func1
     0.02s  0.63% 84.64%      0.02s  0.63%  runtime.freedefer
     0.02s  0.63% 85.27%      0.02s  0.63%  runtime.heapBitsForObject
     0.02s  0.63% 85.89%      0.02s  0.63%  runtime.memhash
     0.02s  0.63% 86.52%      0.12s  3.76%  runtime.newarray
     0.02s  0.63% 87.15%      0.17s  5.33%  runtime.newobject
     0.02s  0.63% 87.77%      0.05s  1.57%  runtime.scanblock
     0.02s  0.63% 88.40%      0.02s  0.63%  runtime.unlockOSThread
     0.01s  0.31% 88.71%      0.02s  0.63%  fmt.(*pp).doPrintf
     0.01s  0.31% 89.03%      0.46s 14.42%  github.com/democratic-coin/dcoin-go/packages/utils.CalcProfit
     0.01s  0.31% 89.34%      0.14s  4.39%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_column_int64
     0.01s  0.31% 89.66%      0.02s  0.63%  reflect.(*rtype).AssignableTo
     0.01s  0.31% 89.97%      0.03s  0.94%  reflect.Indirect
     0.01s  0.31% 90.28%      0.02s  0.63%  reflect.typedmemmove
     0.01s  0.31% 90.60%      0.04s  1.25%  regexp.(*machine).backtrack
     0.01s  0.31% 90.91%      0.03s  0.94%  regexp/syntax.Parse
     0.01s  0.31% 91.22%      0.06s  1.88%  runtime.(*mcentral).cacheSpan
     0.01s  0.31% 91.54%      0.02s  0.63%  runtime.(*mheap).allocSpanLocked
     0.01s  0.31% 91.85%      0.03s  0.94%  runtime.deferreturn.func1
     0.01s  0.31% 92.16%      0.05s  1.57%  runtime.gcMarkTermination.func1
     0.01s  0.31% 92.48%      0.03s  0.94%  runtime.makeslice
     0.01s  0.31% 92.79%      0.06s  1.88%  runtime.markrootBlock
     0.01s  0.31% 93.10%      0.03s  0.94%  runtime.memhash64
     0.01s  0.31% 93.42%      0.03s  0.94%  runtime.newstack
         0     0% 93.42%      0.07s  2.19%  database/sql.(*DB).Query
         0     0% 93.42%      0.07s  2.19%  database/sql.(*DB).query
         0     0% 93.42%      0.07s  2.19%  database/sql.(*DB).queryConn
         0     0% 93.42%      0.02s  0.63%  database/sql.(*Rows).Close
         0     0% 93.42%      1.28s 40.13%  database/sql.(*Rows).Next
         0     0% 93.42%      0.02s  0.63%  fmt.Sprintf
         0     0% 93.42%      0.46s 14.42%  github.com/democratic-coin/dcoin-go/packages/dcparser.(*Parser).CalcProfit_
         0     0% 93.42%      0.02s  0.63%  github.com/democratic-coin/dcoin-go/packages/dcparser.(*Parser).ErrInfo
         0     0% 93.42%      0.46s 14.42%  github.com/democratic-coin/dcoin-go/packages/dcparser.(*Parser).calcProfit_
         0     0% 93.42%      2.67s 83.70%  github.com/democratic-coin/dcoin-go/packages/tests/calcprofitgen.BenchmarkCalcProfit
         0     0% 93.42%      0.25s  7.84%  github.com/democratic-coin/dcoin-go/packages/utils.(*DCDB).GetAll
         0     0% 93.42%      0.25s  7.84%  github.com/democratic-coin/dcoin-go/packages/utils.(*DCDB).OneRow
         0     0% 93.42%      0.02s  0.63%  github.com/democratic-coin/dcoin-go/packages/utils.Caller
         0     0% 93.42%      0.11s  3.45%  github.com/democratic-coin/dcoin-go/packages/utils.FormatQueryArgs
         0     0% 93.42%      0.06s  1.88%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteConn).Prepare
         0     0% 93.42%      0.07s  2.19%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteConn).Query
         0     0% 93.42%      0.02s  0.63%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteRows).Close
         0     0% 93.42%      0.02s  0.63%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3.(*SQLiteStmt).Close
         0     0% 93.42%      0.08s  2.51%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_column_double
         0     0% 93.42%      0.02s  0.63%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_finalize
         0     0% 93.42%      0.04s  1.25%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_prepare_v2
         0     0% 93.42%      0.54s 16.93%  github.com/democratic-coin/dcoin-go/vendor/github.com/mattn/go-sqlite3._Cfunc_sqlite3_step
         0     0% 93.42%      0.06s  1.88%  regexp.(*Regexp).FindAllStringSubmatchIndex
         0     0% 93.42%      0.06s  1.88%  regexp.(*Regexp).allMatches
         0     0% 93.42%      0.06s  1.88%  regexp.(*Regexp).doExecute
         0     0% 93.42%      0.02s  0.63%  regexp.(*Regexp).get
         0     0% 93.42%      0.04s  1.25%  regexp.Compile
         0     0% 93.42%      0.04s  1.25%  regexp.compile
         0     0% 93.42%      0.02s  0.63%  regexp.progMachine
         0     0% 93.42%      0.02s  0.63%  regexp/syntax.(*parser).literal
         0     0% 93.42%      0.09s  2.82%  runtime.(*gcWork).get
         0     0% 93.42%      0.06s  1.88%  runtime.(*mcache).refill
         0     0% 93.42%      0.03s  0.94%  runtime.(*mcentral).grow
         0     0% 93.42%      0.03s  0.94%  runtime.(*mheap).alloc
         0     0% 93.42%      0.02s  0.63%  runtime.(*mheap).alloc.func1
         0     0% 93.42%      0.02s  0.63%  runtime.(*mheap).alloc_m
         0     0% 93.42%      0.06s  1.88%  runtime._System
         0     0% 93.42%      0.02s  0.63%  runtime.endcgo
         0     0% 93.42%      0.11s  3.45%  runtime.findrunnable
         0     0% 93.42%      0.08s  2.51%  runtime.gcBgMarkWorker
         0     0% 93.42%      0.17s  5.33%  runtime.gcDrain
         0     0% 93.42%      0.04s  1.25%  runtime.gcMark
         0     0% 93.42%      0.05s  1.57%  runtime.gchelper
         0     0% 93.42%      0.09s  2.82%  runtime.getfull
         0     0% 93.42%      2.75s 86.21%  runtime.goexit
         0     0% 93.42%      0.02s  0.63%  runtime.gopreempt_m
         0     0% 93.42%      0.02s  0.63%  runtime.goschedImpl
         0     0% 93.42%      0.05s  1.57%  runtime.mallocgc.func2
         0     0% 93.42%      0.06s  1.88%  runtime.markroot
         0     0% 93.42%      0.10s  3.13%  runtime.mcall
         0     0% 93.42%      0.03s  0.94%  runtime.morestack
         0     0% 93.42%      0.10s  3.13%  runtime.park_m
         0     0% 93.42%      0.06s  1.88%  runtime.runqgrab
         0     0% 93.42%      0.06s  1.88%  runtime.runqsteal
         0     0% 93.42%      0.11s  3.45%  runtime.schedule
         0     0% 93.42%      0.25s  7.84%  runtime.startTheWorldWithSema
         0     0% 93.42%      0.05s  1.57%  runtime.stopm
         0     0% 93.42%      2.67s 83.70%  testing.(*B).launch
         0     0% 93.42%      2.67s 83.70%  testing.(*B).runN
